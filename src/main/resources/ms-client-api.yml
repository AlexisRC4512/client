openapi: 3.0.3
info:
  title: Client Management Service
  description: API to manage personal and business clients.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /api/v1/client:
    get:
      summary: Get all clients
      operationId: getAllClients
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new client
      operationId: createClient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequest'
      responses:
        '201':
          description: Client created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/client/{id}:
    get:
      summary: Get a client by ID
      operationId: getClientById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a client by ID
      operationId: updateClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRequest'
      responses:
        '200':
          description: Client updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a client by ID
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Client deleted
        '404':
          description: Client not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Client:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - personal
            - business
        documentNumber:
          type: integer
        address:
          type: string
        phone:
          type: string
        email:
          type: string
    ClientRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - personal
            - business
        documentNumber:
          type: integer
        address:
          type: string
        phone:
          type: string
        email:
          type: string
      required:
        - name
        - type
        - address
        - phone
        - email
    ClientResponse:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - personal
            - business
        documentNumber:
          type: integer
        address:
          type: string
        phone:
          type: string
        email:
          type: string
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
